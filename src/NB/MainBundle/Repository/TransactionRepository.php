<?php

namespace NB\MainBundle\Repository;

/**
 * VilleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TransactionRepository extends \Doctrine\ORM\EntityRepository
{
    public function findHash($hash){

        $queryBuilder = $this
            ->createQueryBuilder('t')
            ->Where('t.hash = :hash')
            ->setParameters(array(  'hash' => $hash));
        // On récupère la Query à partir du QueryBuilder
        $query = $queryBuilder->getQuery();
        // On récupère les résultats à partir de la Query
        $results = $query->getResult();
        // $results = $results[;


        dump($results); exit;
        return $results;
    }

    public function findByName($name){

        $queryBuilder = $this
            ->createQueryBuilder('v')
            ->where('v.nom = :nom')
            ->andWhere('v.isActive = :active')
            ->orderBy('v.nom', 'ASC')
            ->setParameters(array(  'active' => true, 'nom' => $name));
        // On récupère la Query à partir du QueryBuilder
        $query = $queryBuilder->getQuery();
        // On récupère les résultats à partir de la Query
        $results = $query->getResult();
        // $results = $results[;


        //dump($results[0]); exit;
        return $results[0];


    }

    public function findByUid($uid){
        $queryBuilder = $this
            ->createQueryBuilder('t')
            ->where('t.uid = :uid')
            ->setParameters([
                'uid' => $uid
            ])
        ;
        // On récupère la Query à partir du QueryBuilder
        $query = $queryBuilder->getQuery();
        // On récupère les résultats à partir de la Query
        $results = $query->getResult();
        //$results = $results;


      //  var_dump($results); exit;
        return $results[0];
    }
}
